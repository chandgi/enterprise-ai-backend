{
  "openapi": "3.0.0",
  "info": {
    "title": "Enterprise AI Backend API",
    "version": "1.0.0",
    "description": "API documentation for Enterprise AI Backend"
  },
  "servers": [
    {
      "url": "http://localhost:3002",
      "description": "Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/{model}/generate": {
      "post": {
        "tags": ["Chat"],
        "summary": "Generate chat completion",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name to use for chat"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["prompt"],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "The chat prompt"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/list": {
      "get": {
        "tags": ["Chat"],
        "summary": "List available chat models",
        "responses": {
          "200": {
            "description": "List of available models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "models": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/memory/search": {
      "post": {
        "tags": ["Memory"],
        "summary": "Search vector embeddings",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query_vector"],
                "properties": {
                  "query_vector": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "description": "Vector embedding to search with"
                  },
                  "limit": {
                    "type": "integer",
                    "default": 5,
                    "description": "Maximum number of results to return"
                  },
                  "threshold": {
                    "type": "number",
                    "default": 0.3,
                    "description": "Maximum cosine distance for matches (0-1)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "content": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "distance": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "dimensions": {
                          "type": "integer"
                        },
                        "threshold": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ollama/pull/{model}": {
      "post": {
        "tags": ["Ollama"],
        "summary": "Pull a new model",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name to pull"
          }
        ],
        "responses": {
          "200": {
            "description": "Model pulled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ollama/ps": {
      "get": {
        "tags": ["Ollama"],
        "summary": "List running models",
        "responses": {
          "200": {
            "description": "List of running models",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "models": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ollama/delete/{model}": {
      "delete": {
        "tags": ["Ollama"],
        "summary": "Delete a model",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Model deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ollama/ask/{model}": {
      "post": {
        "tags": ["Ollama"],
        "summary": "Ask a question to a model",
        "parameters": [
          {
            "name": "model",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Model name to query"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["prompt"],
                "properties": {
                  "prompt": {
                    "type": "string",
                    "description": "The question to ask"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Model response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
